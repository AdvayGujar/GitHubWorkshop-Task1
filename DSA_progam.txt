
Q1. Write a C program to check if a given number is a part of Fibonacci number series

#include <stdio.h>
#include <stdbool.h>
#include <math.h>
bool isPerfectSquare(int x)
{
    int s = sqrt(x);
    return (s * s == x);
}
 
// Returns true if n is a Fibonacci Number, else false
bool isFibonacci(int n)
{
    // n is Fibonacci if one of 5*n*n + 4 or 5*n*n - 4 or
    // both is a perfect square
    return isPerfectSquare(5 * n * n + 4) || isPerfectSquare(5 * n * n - 4);
           
}

int main()
{
    for (int i = 1; i <= 10; i++) {
        if (isFibonacci(i))
            printf("%d is a Fibonacci Number \n", i);
        else
            printf("%d is a not Fibonacci Number \n", i);
    }
    return 0;
}



Q2.Write a C program to generate Pascal Triangle using array


#include <stdio.h>  
// Function to calculate and display Pascal's Triangle  
void displayPascalsTriangle(int n) {  
    int triangle[100][100];  
  
    // Initialize first row to 1's  
    for (int i = 0; i< n; i++) {  
        triangle[0][i] = 1;  
    }  
  
    
    for (int i = 1; i< n; i++) {  
        for (int j = 0; j <= i; j++) {  
            if (j == 0 || j == i) {  
                triangle[i][j] = 1;  
            } else {  
                triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j];  
            }  
        }  
    }  
  
    // Display triangle 
printf("Pascal's Triangle (up to row %d):\n", n);  
    for (int i = 0; i< n; i++) {  
        for (int j = 0; j < n-i-1; j++) {  
printf("  "); // Add spaces 
        }  
        for (int j = 0; j <= i; j++) {  
printf("%4d", triangle[i][j]); // Print number   
        }  
printf("\n");  
    }  
}  
  
int main() {  
    int n = 10; // Number of rows to generate  
displayPascalsTriangle(n); // function to display Pascal's Triangle  
  
    return 0;  
}  


Q3. Write a C program to roll_no, name , percentange of 5 students using array of
structure and display the records in ascending order of roll list.


#include<stdio.h>


struct student
{
 char name[30];
 int roll;
 float percentage;
};

int main()
{

 struct student s[5], temp;
 int i,j,n;
 
 printf("Enter n:\n");
 scanf("%d",&n);
 for(i=0;i< n;i++)
 {
  printf("Enter name, roll and percentage of student:\n");
  scanf("%s%d%f",s[i].name, &s[i].roll, &s[i].percentage);
 }
 for(i=0;i< n-1;i++)
 {
  for(j=i+1;j< n;j++)
  {
   if(s[i].roll>s[j].roll)
   {
    temp = s[i];
    s[i] = s[j];
    s[j] = temp;
   }
  }
 }
 printf("Sorted records are:\n");
 for(i=0;i< n;i++)
 {
  printf("Name: %s\n", s[i].name);
  printf("Roll: %d\n", s[i].roll);
  printf("Percentage: %0.2f\n\n", s[i].percentage);
 }
 return 0;
}




Q4 Write a C program to roll_no, name , percentange of 5 students using array of
structure and display the records in descending order of percentange.


#include<stdio.h>


struct student
{
 char name[30];
 int roll;
 float percentage;
};

int main()
{

 struct student s[5], temp;
 int i,j,n;
 
 printf("Enter n:\n");
 scanf("%d",&n);
 for(i=0;i< n;i++)
 {
  printf("Enter name, roll and percentage of student:\n");
  scanf("%s%d%f",s[i].name, &s[i].roll, &s[i].percentage);
 }
 for(i=0;i< n-1;i++)
 {
  for(j=i+1;j< n;j++)
  {
   if(s[i].percentage<s[j].percentage)
   {
    temp = s[i];
    s[i] = s[j];
    s[j] = temp;
   }
  }
 }
 printf("Sorted records are:\n");
 for(i=0;i< n;i++)
 {
  printf("Name: %s\n", s[i].name);
  printf("Roll: %d\n", s[i].roll);
  printf("Percentage: %0.2f\n\n", s[i].percentage);
 }
 return 0;
}



Q5 Write a C program to find largest element in an array

#include <stdio.h>
int main() {
  int n;
  double arr[20];
  printf("Enter the number of elements (1 to 10): ");
  scanf("%d", &n);

  for (int i = 0; i < n; ++i) {
    printf("Enter number%d: ", i + 1);
    scanf("%lf", &arr[i]);
  }

  //sorting array 
  for (int i = 1; i < n; ++i) {
    if (arr[0] < arr[i]) {
      arr[0] = arr[i];
    }
  }

  printf("Largest element = %.2lf", arr[0]);

  return 0;
}

Q6 Write a menu driven program to perform the following operations in an ARRAY
1. INSERT
2. DELETE
3. TRAVERSE
4. SEARCH



Q7 Define a structure data type called time_struct containing 3 members int hour, int
minute and int second. Write functions that accept the structure to perform the
following operations:
1. Input new time
2. Display the time
3. Update the time such that the function accepts the time_struct and
increments the time by one second.(If the increment results in 60 seconds, the then
second member is set to 0 and the minute is incremented by 1. Then, if the result is 60
minutes, the minute member is set to 0 and the hour member is incremented by 1.
Finally when the hour becomes 24, it is set to zero.)


#include<stdio.h>

struct time
{
    int hour;
    int min;
    int sec;
};

void main()
{
    struct time t1;
    printf("Enter value of hours :");
    scanf("%d",&t1.hour);
    printf("Enter value of min :");
    scanf("%d",&t1.min);
    printf("Enter value of sec :");
    scanf("%d",&t1.sec);


    struct time t2;
    printf("Enter value of hours :");
    scanf("%d",&t2.hour);
    printf("Enter value of min :");
    scanf("%d",&t2.min);
    printf("Enter value of sec :");
    scanf("%d",&t2.sec);

    t1.sec += t2.sec;
    if(t1.sec > 60)
    {
        t1.sec -= 60;
        t1.min++;
    }

    t1.sec += t2.min;
    if(t1.min > 60)
    {
        t1.min -= 60;
        t1.hour++;
    }

    t1.hour += t2.hour;
    if(t2.hour > 24)
    {
        t1.sec -= 24;
    }

    printf("Hours : ");
    printf("%d\n",t1.hour);
    printf("Minutes : ");
    printf("%d\n",t1.min);
    printf("Seconds : ");
    printf("%d\n",t1.sec);
}


Q8 Write a function that compares two arrays and returns 1 if they are identical and 0
otherwise.

#include<stdio.h>

int check(int arr1[],int arr2[], int n) 
{
    int flag = 1;
    for(int i = 0; i < n; i++)
    {
        if(arr1[i] = arr2[i])
        {
            flag = 0;
            break;
        }
    }
    return flag;
}
void main() 
{
    int n;
    printf("Enter an integer in an array : ");
    scanf("%d",&n);
    
    int arr1[n],arr2[n];
    printf("Enter elements in first array ");
    for(int i = 0; i < n; i++)
    {
        scanf("%d",&arr1[i]);
    }
    printf("Enter elements in second array ");
    for(int i = 0; i < n; i++)
    {
        scanf("%d",&arr2[i]);
    }
    printf("The array is identical : %d\n",(arr1,arr2,n));
}



Q9 Write a program in C to count the total number of duplicate elements in an array. 

#include <stdio.h>
int main()
{
   int arr[100];
   int n,mm=1,ctr=0;
   int i, j;
     printf("Input the number of elements to be stored in the array :");
      scanf("%d",&n);
      printf("Input %d elements in the array :\n",n);
      for(i=0;i<n;i++)
       {
              printf("element - %d : ",i);
              scanf("%d",&arr[i]);
            }
          for (i = 0; i < n; i++) {
      for (j = i + 1; j < n; j++) {
       if (arr[i] == arr[j]) {
         ctr++;
         break;
   }
   }
 }
 printf("Total number of duplicate elements found in the array: %d\n", ctr);
 return 0;
}



Q10 Write a program in C to print all unique elements in an array

#include<stdio.h>
 
int main() {
 int array[100], size, i, j;
  
 printf("Enter number of elements in array\n");
 scanf("%d", &size);
 printf("Enter %d numbers\n", size);
  
 for(i = 0; i < size; i++){
  scanf("%d", &array[i]);
 }
  
 printf("Unique Elements\n");
 for(i = 0; i < size; i++) {
  for (j=0; j<i; j++){
      if (array[i] == array[j])
       break;
       }
      
     if (i == j){
      printf("%d ", array[i]);
  }
 }
  
 return 0;
}
